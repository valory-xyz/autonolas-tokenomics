name: Workflow
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    continue-on-error: False
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Node.js
        uses: actions/setup-node@v4

      # Install modules
      - name: Install modules
        run: yarn install

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      # Run linters
      - name: Run ESLint
        run: ./node_modules/.bin/eslint . --ext .js,.jsx,.ts,.tsx
      - name: Run solhint
        run: ./node_modules/.bin/solhint contracts/interfaces/*.sol contracts/*.sol contracts/test/*.sol

      # Compile the code
      - name: Compile, adjust uniswap library hash and recompile again
        run: npm run compile

      # Compile the code and run hardhat tests
      - name: Run hardhat tests
        run: ./node_modules/.bin/hardhat test

      # Run hardhat coverage and upload codecov report
      - name: Solidity coverage summary
        run: ./node_modules/.bin/hardhat coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      # Compile the code and run foundry tests
      - name: Run foundry tests
        run: forge test -vvv

  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: "1.17.7"
      - run: |
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.21.2/gitleaks_8.21.2_linux_x64.tar.gz && \
          tar -xzf gitleaks_8.21.2_linux_x64.tar.gz && \
          sudo install gitleaks /usr/bin && \
          gitleaks detect --report-format json --report-path leak_report -v